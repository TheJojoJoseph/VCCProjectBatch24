{"version":3,"sources":["webpack://src/styles/abstracts/_functions.scss","webpack://src/styles/abstracts/_mixins.scss","webpack://src/Components/TopNav/style.module.scss","webpack://src/Components/InputField/style.module.scss","webpack://src/Routes/MainFrame/style.module.scss","webpack://src/index.scss"],"names":[],"mappings":"AACA,0BC+QE,mBAAA,CD5QF,sBCmRE,YAAA,CA6GA,kBD9X0B,CAE5B,oHC+QE,YAAA,CA6GA,qBD1X0B,CAE5B,0BCwXE,0BDvX0B,CAE5B,6BCqXE,6BDpX0B,CAE5B,yBCsVE,uBDpVuB,CCqVvB,kBDrVuB,CAGzB,sDCgUE,2BDpU2B,CCqU3B,sBDhU2B,CAG7B,8BC4TE,kCD3T2B,CC4T3B,6BD5T2B,CAG7B,6BCwTE,iCDvT2B,CCwT3B,4BDxT2B,CAG7B,4BCoTE,+BDnT2B,CCoT3B,0BDpT2B,CAG7B,0BCgTE,6BD/S2B,CCgT3B,wBDhT2B,CAG7B,0BC6TE,uBD5TuB,CC6TvB,kBD7TuB,CAGzB,yBCyTE,2BDxTuB,CCyTvB,sBDzTuB,CAGzB,uBCqTE,yBDpTuB,CCqTvB,oBDrTuB,CAGzB,2BCiTE,wBDhTuB,CCiTvB,mBDjTuB,CAGzB,0BCqVE,gBDpVqB,CAGvB,wBCiVE,cDhVqB,CAGvB,4BCAE,uFAAA,CACA,oFAAA,CAEA,+EAAA,CDGF,2BCNE,uFAAA,CACA,oFAAA,CAEA,+EAAA,CDSF,0BACI,8BAAA,CAGJ,yBACI,qBAAA,CACA,iBAAA,CACA,kBAAA,CCzCA,sBD0CiB,CC1CjB,iBD0CiB,CC1CjB,kBAAA,CAAA,cD0CiB,CEtFrB,sBACE,YAAA,CACA,wBAAA,CACA,6BAAA,CACA,cAAA,CACA,wBACE,cAAA,CAGJ,mBACE,SAAA,CACA,WAAA,CAKA,+BACE,gBAAA,CACA,iBAAA,CAEA,kCACE,aAAA,CAEA,mDACE,kBAAA,CFxBR,0BC+QE,mBAAA,CD5QF,sBCmRE,YAAA,CA6GA,kBD9X0B,CAE5B,kDC+QE,YAAA,CA6GA,qBD1X0B,CAE5B,0BCwXE,0BDvX0B,CAE5B,6BCqXE,6BDpX0B,CAE5B,yBCsVE,uBDpVuB,CCqVvB,kBDrVuB,CAGzB,sDCgUE,2BDpU2B,CCqU3B,sBDhU2B,CAG7B,8BC4TE,kCD3T2B,CC4T3B,6BD5T2B,CAG7B,6BCwTE,iCDvT2B,CCwT3B,4BDxT2B,CAG7B,4BCoTE,+BDnT2B,CCoT3B,0BDpT2B,CAG7B,0BCgTE,6BD/S2B,CCgT3B,wBDhT2B,CAG7B,0BC6TE,uBD5TuB,CC6TvB,kBD7TuB,CAGzB,yBCyTE,2BDxTuB,CCyTvB,sBDzTuB,CAGzB,uBCqTE,yBDpTuB,CCqTvB,oBDrTuB,CAGzB,2BCiTE,wBDhTuB,CCiTvB,mBDjTuB,CAGzB,0BCqVE,gBDpVqB,CAGvB,wBCiVE,cDhVqB,CAGvB,4BCAE,uFAAA,CACA,oFAAA,CAEA,+EAAA,CDGF,2BCNE,uFAAA,CACA,oFAAA,CAEA,+EAAA,CDSF,0BACI,8BAAA,CAGJ,yBACI,qBAAA,CACA,iBAAA,CACA,kBAAA,CCzCA,sBD0CiB,CC1CjB,iBD0CiB,CC1CjB,kBAAA,CAAA,cD0CiB,CGpFjB,8BACI,aAAA,CACA,UAAA,CAEJ,8BACI,eAAA,CACA,sBAAA,CACA,qBAAA,CCVR,wBACI,cAAA,CCDJ,KACE,QAAA,CACA,wBAAA,CACA,mJAAA,CAGA,kCAAA,CACA,iCAAA,CAGF,KACE,yEAAA","file":"main.054bbe8e.chunk.css","sourcesContent":["@import \"./mixins\";\n.inline-flex {\n    @include inline-flex;\n}\n.flexbox {\n    @include flexbox();\n    @include flex-direction(row);\n}\n.flex-column {\n    @include flexbox();\n    @include flex-direction(column);\n}\n.row-reverse {\n    @include flex-direction(row-reverse);\n}\n.column-reverse {\n    @include flex-direction(column-reverse);\n}\n.all-center {\n    @include justify-content(center);\n    @include align-items(center);\n}\n\n.justify-center {\n    @include justify-content(center);\n}\n\n.justify-between {\n    @include justify-content(space-between);\n}\n\n.justify-around {\n    @include justify-content(space-around);\n}\n\n.justify-start {\n    @include justify-content(flex-start);\n}\n\n.justify-end {\n    @include justify-content(flex-end);\n}\n\n.item-center {\n    @include align-items(center);\n}\n\n.item-start {\n    @include align-items(flex-start);\n}\n\n.item-end {\n    @include align-items(flex-end);\n}\n\n.item-stretch {\n    @include align-items(stretch);\n}\n\n.item-nowrap {\n    @include flex-wrap(nowrap);\n}\n\n.item-wrap {\n    @include flex-wrap(wrap);\n}\n\n.image-overlay {\n    @include linear-gradient(\n        to top,\n        (theme-colors(\"primary\", \"base\", $opacity: 0.7) 20%, theme-colors(\"primary\", \"base\", $opacity: 0.01) 100%)\n    );\n}\n.timeline-box {\n    @include linear-gradient(\n        to top,\n        (theme-colors(\"primary\", \"base\", $opacity: 0.1) 20%, theme-colors(\"primary\", \"base\", $opacity: 0.01) 100%)\n    );\n}\n.borer-theam {\n    border-color: theme-colors(\"primary\", \"base\", 0.1);\n}\n\n.break-text {\n    word-break: break-word;\n    line-break: strict;\n    white-space: normal;\n    @include hyphens(\"auto\");\n}\n","@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\r\n  $src: null;\r\n\r\n  $extmods: (\r\n    eot: \"?\",\r\n    svg: \"#\" + str-replace($name, \" \", \"_\"),\r\n  );\r\n\r\n  $formats: (\r\n    otf: \"opentype\",\r\n    ttf: \"truetype\",\r\n  );\r\n\r\n  @each $ext in $exts {\r\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\r\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\r\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\r\n  }\r\n\r\n  @font-face {\r\n    font-family: quote($name);\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n    src: $src;\r\n  }\r\n}\r\n@mixin box-sizing($box-model) {\r\n  -webkit-box-sizing: $box-model;\r\n  -moz-box-sizing: $box-model;\r\n  box-sizing: $box-model;\r\n}\r\n\r\n@mixin border-radius($radius) {\r\n  border-radius: $radius;\r\n  -webkit-border-radius: $radius;\r\n  -moz-border-radius: $radius;\r\n}\r\n\r\n@mixin box-shadow($params...) {\r\n  -webkit-box-shadow: $params;\r\n  -moz-box-shadow: $params;\r\n  box-shadow: $params;\r\n}\r\n@mixin hyphens($value: \"manual\") {\r\n  @each $prefix in -webkit-, -moz-, -o-, \"\" {\r\n    #{$prefix}hyphens: $value;\r\n  }\r\n}\r\n/*=====\r\nalpha\r\n========*/\r\n\r\n@mixin background-opacity($color, $opacity: 0.3) {\r\n  background: $color;\r\n  background: rgba($color, $opacity);\r\n}\r\n\r\n/*=====\r\nlinear-gradien\r\n========*/\r\n\r\n@mixin linear-gradient($direction, $color-stops...) {\r\n  @if is-direction($direction) ==false {\r\n    $color-stops: $direction, $color-stops;\r\n  }\r\n\r\n  background-image: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\r\n  background-image: -webkit-linear-gradient($direction, $color-stops);\r\n  background: -ms-linear-gradient($direction, $color-stops);\r\n  background-image: -ms-linear-gradient($direction, $color-stops);\r\n  background-image: linear-gradient($direction, $color-stops);\r\n}\r\n@mixin gradient-border($color1, $color2, $border-width, $direction) {\r\n  border: none;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(#{$direction}, $color1 0%, $color2 100%),\r\n    linear-gradient(#{$direction}, $color1 0%, $color2 100%);\r\n  @if $direction == \"to right\" or $direction == \"to left\" {\r\n    @if $direction == \"to right\" {\r\n      border-left: $border-width solid $color1;\r\n      border-right: $border-width solid $color2;\r\n    } @else {\r\n      border-left: $border-width solid $color2;\r\n      border-right: $border-width solid $color1;\r\n    }\r\n    background-position: 0 0, 0 100%;\r\n    background-size: 100% $border-width;\r\n  }\r\n\r\n  @if $direction == \"to top\" or $direction == \"to bottom\" {\r\n    @if $direction == \"to top\" {\r\n      border-top: $border-width solid $color2;\r\n      border-bottom: $border-width solid $color1;\r\n    } @else {\r\n      border-top: $border-width solid $color1;\r\n      border-bottom: $border-width solid $color2;\r\n    }\r\n    background-position: 0 0, 100% 0;\r\n    background-size: $border-width 100%;\r\n  }\r\n}\r\n\r\n@mixin text-gradient($dir, $color-stops...) {\r\n  background: -webkit-linear-gradient($dir, $color-stops);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n/*====\r\ntransition\r\n======*/\r\n\r\n@mixin transition($transition...) {\r\n  -moz-transition: $transition;\r\n  -o-transition: $transition;\r\n  -webkit-transition: $transition;\r\n  transition: $transition;\r\n}\r\n\r\n@mixin transition-property($property...) {\r\n  -moz-transition-property: $property;\r\n  -o-transition-property: $property;\r\n  -webkit-transition-property: $property;\r\n  transition-property: $property;\r\n}\r\n\r\n@mixin transition-duration($duration...) {\r\n  -moz-transition-property: $duration;\r\n  -o-transition-property: $duration;\r\n  -webkit-transition-property: $duration;\r\n  transition-property: $duration;\r\n}\r\n\r\n@mixin transition-timing-function($timing...) {\r\n  -moz-transition-timing-function: $timing;\r\n  -o-transition-timing-function: $timing;\r\n  -webkit-transition-timing-function: $timing;\r\n  transition-timing-function: $timing;\r\n}\r\n\r\n@mixin transition-delay($delay...) {\r\n  -moz-transition-delay: $delay;\r\n  -o-transition-delay: $delay;\r\n  -webkit-transition-delay: $delay;\r\n  transition-delay: $delay;\r\n}\r\n\r\n/*====\r\ntransform\r\n======*/\r\n\r\n// generic transform\r\n@mixin transform($transforms) {\r\n  -moz-transform: $transforms;\r\n  -o-transform: $transforms;\r\n  -ms-transform: $transforms;\r\n  -webkit-transform: $transforms;\r\n  transform: $transforms;\r\n}\r\n\r\n@mixin translate3d($x, $y, $z) {\r\n  -webkit-transform: translate3d($x, $y, $z);\r\n  -moz-transform: translate3d($x, $y, $z);\r\n  -o-transform: translate3d($x, $y, $z);\r\n  transform: translate3d($x, $y, $z);\r\n}\r\n// rotate\r\n@mixin rotate($deg) {\r\n  @include transform(rotate(#{$deg}deg));\r\n}\r\n\r\n// scale\r\n@mixin scale($scale) {\r\n  @include transform(scale($scale));\r\n}\r\n\r\n// translate\r\n@mixin translate($x, $y) {\r\n  @include transform(translate($x, $y));\r\n}\r\n@mixin translateY($y) {\r\n  @include transform(translateY($y));\r\n}\r\n@mixin translateX($x) {\r\n  @include transform(translateY($x));\r\n}\r\n\r\n// skew\r\n@mixin skew($x, $y) {\r\n  @include transform(skew(#{$x}deg, #{$y}deg));\r\n}\r\n\r\n//transform origin\r\n@mixin transform-origin($origin) {\r\n  moz-transform-origin: $origin;\r\n  -o-transform-origin: $origin;\r\n  -ms-transform-origin: $origin;\r\n  -webkit-transform-origin: $origin;\r\n  transform-origin: $origin;\r\n}\r\n\r\n@mixin optional-at-root($sel) {\r\n  @at-root #{if(not &, $sel, selector-append(&, $sel))} {\r\n    @content;\r\n  }\r\n}\r\n\r\n/*----\r\nplaceholder\r\n-----*/\r\n\r\n@mixin placeholder {\r\n  @include optional-at-root(\"::-webkit-input-placeholder\") {\r\n    @content;\r\n  }\r\n\r\n  @include optional-at-root(\":-moz-placeholder\") {\r\n    @content;\r\n  }\r\n\r\n  @include optional-at-root(\"::-moz-placeholder\") {\r\n    @content;\r\n  }\r\n\r\n  @include optional-at-root(\":-ms-input-placeholder\") {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin text-fill-color($value) {\r\n  -webkit-text-fill-color: $value;\r\n  -moz-text-fill-color: $value;\r\n  -o-text-fill-color: $value;\r\n  -ms-text-fill-color: $value;\r\n  text-fill-color: $value;\r\n}\r\n\r\n@mixin text-stroke-color($value) {\r\n  -webkit-stroke-fill-color: $value;\r\n  -moz-stroke-fill-color: $value;\r\n  -o-stroke-fill-color: $value;\r\n  -ms-stroke-fill-color: $value;\r\n  stroke-fill-color: $value;\r\n}\r\n\r\n@mixin text-stroke-width($value) {\r\n  -webkit-text-stroke-width: $value;\r\n  -moz-text-stroke-width: $value;\r\n  -o-text-stroke-width: $value;\r\n  -ms-text-stroke-width: $value;\r\n  text-stroke-width: $value;\r\n}\r\n\r\n/*----\r\nflex\r\n-----*/\r\n@mixin flex($fg: 1, $fs: 0, $fb: auto) {\r\n  $fg-boxflex: $fg;\r\n  @if type-of($fg) == \"list\" {\r\n    $fg-boxflex: nth($fg, 1);\r\n  }\r\n  -webkit-box: $fg-boxflex;\r\n  -moz-box: $fg-boxflex;\r\n  -webkit-flex: $fg $fs $fb;\r\n  -ms-flex: $fg $fs $fb;\r\n  flex: $fg $fs $fb;\r\n}\r\n@mixin inline-flex {\r\n  display: -webkit-inline-box;\r\n  display: -moz-inline-box;\r\n  display: -webkit-inline-flex;\r\n  display: -ms-inline-flexbox;\r\n  display: inline-flex;\r\n}\r\n@mixin flexbox() {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n}\r\n@mixin flex($values) {\r\n  -webkit-box-flex: $values;\r\n  -moz-box-flex: $values;\r\n  -webkit-flex: $values;\r\n  -ms-flex: $values;\r\n  flex: $values;\r\n}\r\n@mixin order($val) {\r\n  -webkit-box-ordinal-group: $val;\r\n  -moz-box-ordinal-group: $val;\r\n  -ms-flex-order: $val;\r\n  -webkit-order: $val;\r\n  order: $val;\r\n}\r\n@mixin flex-grow($grow) {\r\n  -webkit-flex-grow: $grow;\r\n  -moz-flex-grow: $grow;\r\n  -ms-flex-grow: $grow;\r\n  flex-grow: $grow;\r\n}\r\n@mixin flex-shrink($shrink) {\r\n  -webkit-flex-shrink: $shrink;\r\n  -moz-flex-shrink: $shrink;\r\n  -ms-flex-shrink: $shrink;\r\n  flex-shrink: $shrink;\r\n}\r\n@mixin flex-flow($flow) {\r\n  -webkit-flex-flow: $flow;\r\n  -moz-flex-flow: $flow;\r\n  -ms-flex-flow: $flow;\r\n  flex-flow: $flow;\r\n}\r\n\r\n@mixin grid($flexbox) {\r\n  @if $flexbox {\r\n    @include flexbox;\r\n  } @else {\r\n    display: block;\r\n  }\r\n}\r\n\r\n@mixin justify-content($value: flex-start) {\r\n  @if $value==flex-start {\r\n    -webkit-box-pack: start;\r\n    -ms-flex-pack: start;\r\n  } @else if $value==flex-end {\r\n    -webkit-box-pack: end;\r\n    -ms-flex-pack: end;\r\n  } @else if $value==space-between {\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n  } @else if $value==space-around {\r\n    -ms-flex-pack: distribute;\r\n  } @else if $value==center {\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n  } @else {\r\n    -webkit-box-pack: $value;\r\n    -ms-flex-pack: $value;\r\n  }\r\n\r\n  -webkit-justify-content: $value;\r\n  -moz-justify-content: $value;\r\n  justify-content: $value;\r\n}\r\n\r\n@mixin align-items($value: stretch) {\r\n  @if $value==flex-start {\r\n    -webkit-box-align: start;\r\n    -ms-flex-align: start;\r\n  } @else if $value==flex-end {\r\n    -webkit-box-align: end;\r\n    -ms-flex-align: end;\r\n  } @else {\r\n    -webkit-box-align: $value;\r\n    -ms-flex-align: $value;\r\n  }\r\n\r\n  -webkit-align-items: $value;\r\n  -moz-align-items: $value;\r\n  align-items: $value;\r\n}\r\n\r\n@mixin flex-direction($direction: row) {\r\n  @if $direction == row-reverse {\r\n    -webkit-box-direction: reverse;\r\n    -webkit-box-orient: horizontal;\r\n    -moz-box-direction: reverse;\r\n    -moz-box-orient: horizontal;\r\n  } @else if $direction == column {\r\n    -webkit-box-direction: normal;\r\n    -webkit-box-orient: vertical;\r\n    -moz-box-direction: normal;\r\n    -moz-box-orient: vertical;\r\n  } @else if $direction == column-reverse {\r\n    -webkit-box-direction: reverse;\r\n    -webkit-box-orient: vertical;\r\n    -moz-box-direction: reverse;\r\n    -moz-box-orient: vertical;\r\n  } @else {\r\n    -webkit-box-direction: normal;\r\n    -webkit-box-orient: horizontal;\r\n    -moz-box-direction: normal;\r\n    -moz-box-orient: horizontal;\r\n  }\r\n  -webkit-flex-direction: $direction;\r\n  -ms-flex-direction: $direction;\r\n  flex-direction: $direction;\r\n}\r\n\r\n@mixin flex-wrap($value) {\r\n  // IE 10\r\n  @if $value==nowrap {\r\n    -ms-flex-wrap: none;\r\n  } @else {\r\n    -ms-flex-wrap: $value;\r\n  }\r\n\r\n  -webkit-flex-wrap: $value;\r\n  flex-wrap: $value;\r\n}\r\n\r\n/*-=====\r\nopasity\r\n=======*/\r\n\r\n@mixin opacity($value) {\r\n  $IEValue: $value * 100;\r\n  opacity: $value;\r\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + $IEValue + \")\";\r\n  filter: alpha(opacity=$IEValue);\r\n}\r\n\r\n/*-=====\r\nappearance\r\n=======*/\r\n\r\n@mixin appearance($value) {\r\n  -webkit-appearance: $value;\r\n  -moz-appearance: $value;\r\n  appearance: $value;\r\n}\r\n\r\n/*-=====\r\nfilter\r\n=======*/\r\n\r\n// grayscale      ex: filter: grayscale(100%);\r\n// sepia          ex: filter: sepia(100%);\r\n// saturate       ex: filter: saturate(0%);\r\n// hue-rotate     ex: filter: hue-rotate(45deg);\r\n// invert         ex: filter: invert(100%);\r\n// brightness     ex: filter: brightness(15%);\r\n// contrast       ex: filter: contrast(200%);\r\n// blur           ex: filter: blur(2px);\r\n\r\n@mixin filter($filter-type, $filter-amount) {\r\n  -webkit-filter: unquote($filter-type + unquote(\"(#{$filter-amount})\"));\r\n  -moz-filter: unquote($filter-type + unquote(\"(#{$filter-amount})\"));\r\n  -ms-filter: unquote($filter-type + unquote(\"(#{$filter-amount})\"));\r\n  -o-filter: unquote($filter-type + unquote(\"(#{$filter-amount})\"));\r\n  filter: unquote($filter-type + unquote(\"(#{$filter-amount})\"));\r\n}\r\n\r\n/*-=====\r\nreact select\r\n=======*/\r\n\r\n@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, 0.4)) {\r\n  text-shadow: $x $y $blur $color;\r\n}\r\n\r\n/*-=====\r\nAnimation\r\n=======*/\r\n\r\n@mixin animation($animate...) {\r\n  $max: length($animate);\r\n  $animations: \"\";\r\n\r\n  @for $i from 1 through $max {\r\n    $animations: #{$animations + nth($animate, $i)};\r\n\r\n    @if $i < $max {\r\n      $animations: #{$animations + \", \"};\r\n    }\r\n  }\r\n  -webkit-animation: $animations;\r\n  -moz-animation: $animations;\r\n  -o-animation: $animations;\r\n  animation: $animations;\r\n}\r\n\r\n@mixin keyframes($animationName) {\r\n  @-webkit-keyframes #{$animationName} {\r\n    @content;\r\n  }\r\n\r\n  @-moz-keyframes #{$animationName} {\r\n    @content;\r\n  }\r\n\r\n  @-o-keyframes #{$animationName} {\r\n    @content;\r\n  }\r\n\r\n  @keyframes #{$animationName} {\r\n    @content;\r\n  }\r\n}\r\n","@import \"../../styles/abstracts/controls\";\n.nav-bar {\n  display: flex;\n  background-color: #e3e3e3;\n  justify-content: space-between;\n  padding: 20px 0px;\n  a {\n    padding: 0px 20px;\n  }\n}\n.logo {\n  width: 50%; // Set the width to 50%\n  height: auto; // Maintain aspect ratio\n}\n\n.formsBlock {\n  @extend .flex-column;\n  &__list {\n    padding-top: 1rem;\n    padding-left: 10px;\n    @extend .flex-column;\n    li {\n      flex: 1 1 auto;\n      @extend .flex-column;\n      &:not(:last-child) {\n        margin-bottom: 10px;\n      }\n    }\n  }\n}\n","@import \"../../styles/abstracts/controls\";\n.formFeild {\n    @extend .flex-column;\n    label {\n        flex: 1 1 auto;\n        color: theme-colors(\"background\", \"black\");\n    }\n    input {\n        min-height: 30px;\n        background: transparent;\n        border: solid 1px theme-colors(\"background\", \"white\");\n    }\n}",".container{\n    padding: 0 20px;\n}","body {\n  margin: 0;\n  background-color:#f6f6f8;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n"]}